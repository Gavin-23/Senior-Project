{"version":3,"sources":["webpack:///./src/app/event-list/event-list.module.ts","webpack:///./src/app/event-list/event-list.page.html","webpack:///./src/app/event-list/event-list.page.scss","webpack:///./src/app/event-list/event-list.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEK;AAElD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAa;KACzB;CACF,CAAC;AAWF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAT/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,8DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBhC,gPAAgP,sDAAsD,wDAAwD,uGAAuG,WAAW,6DAA6D,gBAAgB,6DAA6D,2BAA2B,8DAA8D,YAAY,6DAA6D,WAAW,uHAAuH,WAAW,ksFAAksF,WAAW,iEAAiE,WAAW,aAAa,YAAY,eAAe,cAAc,mCAAmC,eAAe,y9BAAy9B,GAAG,+nB;;;;;;;;;;;ACAtuJ,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACd;AACuB;AACb;AAEG;AACR;AAGJ;AAOrC;IAaE,uBACS,IAAU,EACV,OAAyB,EACzB,IAAiB,EAChB,eAAgC,EAChC,MAAc;QAJf,SAAI,GAAJ,IAAI,CAAM;QACV,YAAO,GAAP,OAAO,CAAkB;QACzB,SAAI,GAAJ,IAAI,CAAa;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAPxB,WAAM,GAAG,KAAK,CAAC;QAgHf,mCAAmC;QACnC,4CAA4C;QAC5C,0BAA0B;QAC1B,4CAA4C;QAC5C,yBAAyB;QAEzB,eAAU,GAAG;YACX;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,KAAK;aACf,EAAE;gBACD,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,IAAI;aACd;SACF,CAAC;QA9HA,IAAI,CAAC,MAAM,GAAG,6CAAa,EAAE,CAAC,WAAW,CAAC,GAAG;IAC/C,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YACnC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAC;gBACrB,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,6CAAa,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE;oBACnE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE;iBAC/B;qBAAM;oBACL,OAAO;wBACL,aAAa,EAAE,KAAK;wBACpB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACpB,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;wBAClC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC;wBACzC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC;wBAC3C,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;wBAClC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;wBACpC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;wBAClC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;qBACvC,CAAC;iBACH;YACH,CAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAK;QAAlB,iBAgBC;QAfC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAEvC,IAAI,CAAC,mBAAmB,CAAC,6CAA6C,CAAC,CAAC,IAAI,CAAC,iBAAO;YAElF,IAAI,OAAO,EAAE;gBACX,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC9B,KAAI,CAAC,SAAS,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,kCAAU,GAAV,UAAW,MAAM;QACf,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;QAC9B,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC;QACrC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC;QACvC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;QAC9B,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;QAChC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;IAEhC,CAAC;IAED,oCAAY,GAAZ,UAAa,SAAS;QAEpB,IAAI,SAAS,CAAC,QAAQ,IAAI,EAAE,EAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,qDAAqD,CAAC,CAAC;YACrF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;SAErC;aAAM,IAAI,SAAS,CAAC,eAAe,IAAI,EAAE,EAAE;YAC1C,IAAI,CAAC,SAAS,CAAC,oBAAoB,EAAE,qDAAqD,CAAC,CAAC;YAC5F,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;SAE5C;aAAM,IAAI,SAAS,CAAC,YAAY,IAAI,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,qDAAqD,CAAC,CAAC;YACzF,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;SAEzC;aAAM,IAAI,SAAS,CAAC,QAAQ,IAAI,EAAE,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,qDAAqD,CAAC,CAAC;YACrF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;SAErC;aAAM,IAAI,SAAS,CAAC,UAAU,IAAI,EAAE,EAAE;YACrC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,qDAAqD,CAAC,CAAC;YACtF,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;SAEtC;aAAM,IAAI,SAAS,CAAC,QAAQ,IAAI,EAAE,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,qDAAqD,CAAC,CAAC;YACrF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;SAErC;aAAM;YACL,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC;YACpC,MAAM,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC,eAAe,CAAC;YAClD,MAAM,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC;YACpC,MAAM,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC7C,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,sBAAsB,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;SAC9C;IACH,CAAC;IA0BD,4BAA4B;IAC5B,kDAAkD;IAClD,4CAA4C;IAC5C,IAAI;IAEJ,iBAAiB;IACjB,+BAA+B;IAC/B,IAAI;IACJ,uBAAuB;IACvB,6CAA6C;IAC7C,2CAA2C;IAC3C,IAAI;IACJ,gBAAgB;IAChB,8BAA8B;IAC9B,IAAI;IAEE,2CAAmB,GAAzB,UAA0B,OAAe;;;;;;wBAEjC,OAAO,GAAG,IAAI,OAAO,CAAU,iBAAO;4BAC1C,eAAe,GAAG,OAAO,CAAC;wBAC5B,CAAC,CAAC,CAAC;wBACW,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAC9C,MAAM,EAAE,eAAe;gCACvB,OAAO,EAAE,OAAO;gCAChB,OAAO,EAAE;oCACP;wCACE,IAAI,EAAE,QAAQ;wCACd,OAAO,EAAE,cAAM,sBAAe,CAAC,KAAK,CAAC,EAAtB,CAAsB;qCACtC,EAAE;wCACD,IAAI,EAAE,SAAS;wCACf,OAAO,EAAE,cAAM,sBAAe,CAAC,IAAI,CAAC,EAArB,CAAqB;qCACrC;iCACF;6BACF,CAAC;;wBAZI,KAAK,GAAG,SAYZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;wBACtB,sBAAO,OAAO,EAAC;;;;KAChB;IAEK,iCAAS,GAAf,UAAgB,KAAa,EAAE,OAAe;;;;;4BAC9B,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,KAAK;4BACb,OAAO,EAAE,OAAO;4BAChB,OAAO,EAAE,CAAC,IAAI,CAAC;yBAChB,CAAC;;wBAJI,KAAK,GAAG,SAIZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB;;;;;KACtB;IAED,8BAAM,GAAN,UAAO,KAAK;QACV,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,mCAAW,GAAX,UAAY,IAAI;QACd,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;IAC7D,CAAC;IAED,oCAAY,GAAZ,UAAa,SAAS,EAAC,EAAE;QAAzB,iBAwBC;QAvBC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,8CAA8C,CAAC,CAAC,IAAI,CAAC,iBAAO;YACnF,IAAI,OAAO,EAAE;gBACX,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;gBAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACtB,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;wBACnB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACrB;oBACD,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;iBAC9C;gBACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,KAAI,CAAC,SAAS,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;aACrC;iBAAM;gBACL,2CAA2C;gBAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;aACjC;QACH,CAAC,CAAC;IAEJ,CAAC;IAnOU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wGAAqC;;SAEtC,CAAC;+EAee,kDAAI;YACD,wEAAgB;YACnB,yDAAW;YACC,8DAAe;YACxB,sDAAM;OAlBb,aAAa,CAqOzB;IAAD,oBAAC;CAAA;AArOyB","file":"event-list-event-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventListPage } from './event-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EventListPage]\n})\nexport class EventListPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Event List\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card *ngFor=\\\"let item of event\\\">\\n    <div *ngIf=\\\"!item.isCurrentUser; else elseBlock2\\\">\\n      <span *ngIf=\\\"!item.isEdit; else elseBlock\\\">\\n        <div *ngIf=\\\"!item.isMember; else elseBlock1 \\\">\\n\\n          <ion-card-header>\\n            <ion-card-title color=\\\"secondary\\\">{{item.Name}}</ion-card-title>\\n            <ion-card-subtitle>Location:{{item.Localtion}}</ion-card-subtitle>\\n            <ion-card-subtitle>Time: {{item.Time | date:'medium'}}</ion-card-subtitle>\\n            <ion-card-subtitle>Scope: {{item.Scope}}</ion-card-subtitle>\\n            <ion-card-subtitle>Type: {{item.Type}}</ion-card-subtitle>\\n            <ion-card-subtitle>Description:</ion-card-subtitle>\\n            <ion-card-content>{{item.Desc}}</ion-card-content>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-button shape=\\\"round\\\" color=\\\"secondary\\\" size=\\\"small\\\" (click)=\\\"EditRecord(item)\\\">\\n              Update\\n              <ion-icon size=\\\"small\\\" slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button shape=\\\"round\\\" color=\\\"danger\\\" size=\\\"small\\\" (click)=\\\"RemoveRecord(item.id)\\\">\\n              Delete\\n              <ion-icon size=\\\"small\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button shape=\\\"round\\\" color=\\\"warning\\\" size=\\\"small\\\" (click)=\\\"Member(item)\\\">\\n              Member\\n              <ion-icon size=\\\"small\\\" slot=\\\"icon-only\\\" name=\\\"contacts\\\"></ion-icon>\\n            </ion-button>\\n          </ion-card-content>\\n        </div>\\n      </span>\\n\\n\\n      <ng-template #elseBlock>\\n        <ion-card-header>\\n          <ion-card-title>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col>\\n                  Edit\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-list>\\n          <ion-item>\\n            <ion-label><strong>Name</strong></ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"item.EditName\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label><strong>Description</strong></ion-label>\\n            <ion-textarea type=\\\"text\\\" [(ngModel)]=\\\"item.EditDescription\\\"></ion-textarea>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label><strong>Location</strong></ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"item.EditLocation\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label><strong>Time</strong></ion-label>\\n            <ion-datetime placeholder=\\\"Year/Month/Day/Hour/minute\\\" displayFormat=\\\"YYYY/MMM/DD/HH:mm\\\" min=\\\"2019-01-01\\\"\\n              max=\\\"2100-12-31\\\" [(ngModel)]=\\\"item.EditTime\\\"></ion-datetime>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label><strong>Scope</strong></ion-label>\\n            <ion-select value=\\\"notifications\\\" interface=\\\"popover\\\" [(ngModel)]=\\\"item.EditScope\\\">\\n              <ion-select-option value=\\\"CAMT\\\">CAMT Event</ion-select-option>\\n              <ion-select-option value=\\\"CMU\\\">CMU Event</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-label><strong>Type</strong></ion-label>\\n            <ion-radio-group name=\\\"radio-group\\\" [(ngModel)]=\\\"item.EditType\\\">\\n              <ion-item *ngFor=\\\"let item of radio_list\\\">\\n                <ion-label>{{item.text}}</ion-label>\\n                <ion-radio slot=\\\"start\\\" name=\\\"{{item.name}}\\\" value=\\\"{{item.value}}\\\" checked=\\\"{{item.checked}}\\\"\\n                  disabled=\\\"{{item.disabled}}\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-item>\\n        </ion-list>\\n\\n        <ion-card-content>\\n          <ion-col>\\n            <ion-button fill=\\\"outline\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"item.isEdit = false\\\">\\n              Back\\n            </ion-button>\\n          </ion-col>\\n          <ion-col>\\n            <ion-button fill=\\\"outline\\\" color=\\\"success\\\" size=\\\"small\\\" (click)=\\\"UpdateRecord(item)\\\">\\n              Update\\n            </ion-button>\\n          </ion-col>\\n        </ion-card-content>\\n      </ng-template>\\n\\n      <ng-template #elseBlock1>\\n        <ion-card-header>\\n          <ion-card-title>\\n            <ion-grid>\\n              <ion-row>\\n                <ion-col>\\n                  Member\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-title>\\n        </ion-card-header>\\n          <ion-card-content *ngFor=\\\"let i of item.Member\\\">{{i}}\\n              <ion-button fill=\\\"outline\\\" color=\\\"danger\\\" size=\\\"small\\\" (click)=\\\"RemoveMember(item,i)\\\">\\n                  Remove\\n                  <ion-icon size=\\\"small\\\" slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-button>\\n          </ion-card-content>\\n        <ion-card-content>\\n          <ion-col>\\n            <ion-button fill=\\\"outline\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"item.isMember = false\\\">\\n              Back\\n            </ion-button>\\n          </ion-col>\\n        </ion-card-content>\\n      </ng-template>\\n\\n      <div #elseBlock2></div>\\n    </div>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50LWxpc3QvZXZlbnQtbGlzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http'\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { UserService } from '../user.service';\nimport { firestore } from 'firebase/app';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\nimport { } from '@angular/fire/database';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.page.html',\n  styleUrls: ['./event-list.page.scss'],\n})\nexport class EventListPage implements OnInit {\n  event: any;\n  students: any;\n  name: string;\n  desc: string;\n  localtion: string;\n  time: string;\n  scope: string;\n  type: string;\n  userId: string;\n  studentId: string;\n  status = false;\n\n  constructor(\n    public http: Http,\n    public afstore: AngularFirestore,\n    public user: UserService,\n    private alertController: AlertController,\n    private router: Router) {\n    this.userId = firebase.auth().currentUser.uid\n  }\n\n  ngOnInit() {\n    this.user.read_Event().subscribe(data => {\n      this.event = data.map(e => {\n        if (e.payload.doc.data()['UID'] !== firebase.auth().currentUser.uid) {\n          return { isCurrentUser: true }\n        } else {\n          return {\n            isCurrentUser: false,\n            id: e.payload.doc.id,\n            Name: e.payload.doc.data()['Name'],\n            Desc: e.payload.doc.data()['Description'],\n            Localtion: e.payload.doc.data()['Location'],\n            Time: e.payload.doc.data()['Time'],\n            Scope: e.payload.doc.data()['Scope'],\n            Type: e.payload.doc.data()['Type'],\n            Member: e.payload.doc.data()['Member']\n          };\n        }\n      })\n      console.log(this.event);\n      console.log(\"read event successfully!\");\n    });\n  }\n\n  RemoveRecord(rowID) {\n    console.log('show confirmation alert');\n\n    this.presentAlertConfirm('Are you sure you want to delete this event?').then(confirm => {\n\n      if (confirm) {\n        this.user.delete_Event(rowID);\n        this.showAlert(\"Successfully!\", \"Delete Success!\");\n        console.log('show delete success alert');\n        console.log('Deleted');\n      } else {\n        this.router.navigateByUrl('tabs/event-list');\n        console.log('Canceled!');\n        console.log('show canceled alert');\n      }\n    })\n  }\n\n  EditRecord(record) {\n    record.isEdit = true;\n    record.EditName = record.Name;\n    record.EditDescription = record.Desc;\n    record.EditLocation = record.Localtion;\n    record.EditTime = record.Time;\n    record.EditScope = record.Scope;\n    record.EditType = record.Type;\n\n  }\n\n  UpdateRecord(recordRow) {\n\n    if (recordRow.EditName == \"\") {\n      this.showAlert(\"Name empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Name empty!\");\n      console.log(\"show name empty alert\")\n\n    } else if (recordRow.EditDescription == \"\") {\n      this.showAlert(\"Description empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Description empty!\");\n      console.log(\"show description empty alert\")\n\n    } else if (recordRow.EditLocation == \"\") {\n      this.showAlert(\"Location empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Location empty!\");\n      console.log(\"show location empty alert\")\n\n    } else if (recordRow.EditTime == \"\") {\n      this.showAlert(\"Time empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Time empty!\");\n      console.log(\"show time empty alert\")\n\n    } else if (recordRow.EditScopee == \"\") {\n      this.showAlert(\"Scope empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Scope empty!\");\n      console.log(\"show scope empty alert\")\n\n    } else if (recordRow.EditType == \"\") {\n      this.showAlert(\"Type empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Type empty!\");\n      console.log(\"show type empty alert\")\n\n    } else {\n      let record = {};\n      record['Name'] = recordRow.EditName;\n      record['Description'] = recordRow.EditDescription;\n      record['Location'] = recordRow.EditLocation;\n      record['Time'] = recordRow.EditTime;\n      record['Scope'] = recordRow.EditScope;\n      record['Type'] = recordRow.EditType;\n      this.user.update_Event(recordRow.id, record);\n      recordRow.isEdit = false;\n      this.showAlert(\"Successfully!\", \"Update Successfully!\");\n      console.log(\"Update Successfully!\")\n      console.log(\"show create successfully alert\")\n    }\n  }\n\n  // defaultSelectedRadio = \"Public\";\n  // //Get value on ionChange on IonRadioGroup\n  // selectedRadioGroup:any;\n  // //Get value on ionSelect on IonRadio item\n  // selectedRadioItem:any;\n\n  radio_list = [\n    {\n      id: '1',\n      name: 'radio_list',\n      value: 'Public',\n      text: 'Public',\n      disabled: false,\n      checked: false,\n    }, {\n      id: '2',\n      name: 'radio_list',\n      value: 'Private',\n      text: 'Private',\n      disabled: false,\n      checked: true,\n    },\n  ];\n\n  // radioGroupChange(event) {\n  //   console.log(\"radioGroupChange\",event.detail);\n  //   this.selectedRadioGroup = event.detail;\n  // }\n\n  // radioFocus() {\n  //   console.log(\"radioFocus\");\n  // }\n  // radioSelect(event) {\n  //   console.log(\"radioSelect\",event.detail);\n  //   this.selectedRadioItem = event.detail;\n  // }\n  // radioBlur() {\n  //   console.log(\"radioBlur\");\n  // }\n\n  async presentAlertConfirm(content: string) {\n    let resolveFunction: (confirm: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveFunction = resolve;\n    });\n    const alert = await this.alertController.create({\n      header: 'Confirmation!',\n      message: content,\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: () => resolveFunction(false)\n        }, {\n          text: 'Confirm',\n          handler: () => resolveFunction(true)\n        }\n      ]\n    });\n\n    await alert.present();\n    return promise;\n  }\n\n  async showAlert(title: string, content: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: content,\n      buttons: ['OK']\n    })\n    await alert.present()\n  }\n\n  Member(click) {\n    click.isMember = true;\n  }\n\n  checkStatus(item) {\n    return !Object.values(item.Member).includes(this.studentId)\n  }\n\n  RemoveMember(recordRow,id){\n    console.log(recordRow)\n    console.log('show confirmation alert')\n    this.presentAlertConfirm('Are you sure you want to remove this member?').then(confirm => {\n      if (confirm) {\n        let record = recordRow.Member;\n\n        for (let i = 0; i < record.length; i++) {\n          console.log(record[i])\n          if (record[i] == id) {\n            record.splice(i, 1);\n          }\n          this.user.follow_Event(recordRow.id, record);\n        }\n        console.log(record);\n        this.showAlert(\"Successfully!\", \"Remove Success!\");\n        console.log('show remove success alert');\n        console.log('Remove Successfully!');\n      } else {\n        // this.router.navigateByUrl('view-event');\n        console.log('Remove Canceled!');\n      }\n    })\n\n  }\n\n}\n"],"sourceRoot":""}