{"version":3,"sources":["webpack:///./src/app/student/view-calendar/view-calendar.module.ts","webpack:///./src/app/student/view-calendar/view-calendar.page.html","webpack:///./src/app/student/view-calendar/view-calendar.page.scss","webpack:///./src/app/student/view-calendar/view-calendar.page.ts"],"names":[],"mappings":"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","file":"src-app-student-view-calendar-view-calendar-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewCalendarPage } from './view-calendar.page';\n\nimport { NgCalendarModule } from 'ionic2-calendar';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewCalendarPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NgCalendarModule\n  ],\n  declarations: [ViewCalendarPage]\n})\nexport class ViewCalendarPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Calendar</ion-title>\\n    <!-- <ion-buttons fill=\\\"outline\\\" (click)=\\\"today()\\\">Today</ion-buttons> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- Card for adding a new event -->\\n  <ion-card>\\n    <div *ngIf=\\\"!event.isEdit; else elseBlock\\\">\\n      <ion-card-header tappable (click)=\\\"collapseCard = !collapseCard\\\">\\n        <ion-card-title>New Event</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content *ngIf=\\\"collapseCard\\\">\\n        <ion-item>\\n          <ion-label>Name</ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Event Name\\\" [(ngModel)]=\\\"event.name\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Location</ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Location\\\" [(ngModel)]=\\\"event.location\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Description</ion-label>\\n          <ion-textarea type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"event.description\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"secondary\\\"><strong>Time of Event</strong></ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Start</ion-label>\\n          <ion-datetime placeholder=\\\"Month/Day/Hour/minute\\\" displayFormat=\\\"MMM/DD/HH:mm\\\" pickerFormat=\\\"MMM/DD/HH:mm\\\"\\n            [(ngModel)]=\\\"event.startTime\\\">\\n          </ion-datetime>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>End</ion-label>\\n          <ion-datetime placeholder=\\\"Month/Day/Hour/minute\\\" displayFormat=\\\"MMM/DD/HH:mm\\\" pickerFormat=\\\"MMM/DD/HH:mm\\\"\\n            [(ngModel)]=\\\"event.endTime\\\">\\n          </ion-datetime>\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"secondary\\\"><strong>Color of Event</strong></ion-label>\\n        </ion-item>\\n        <ion-radio-group name=\\\"radio-group\\\" [(ngModel)]=\\\"event.color\\\">\\n          <ion-item *ngFor=\\\"let item of radio_list\\\">\\n            <ion-text color=\\\"{{item.color}}\\\">{{item.text}}</ion-text>\\n            <ion-radio slot=\\\"end\\\" color=\\\"{{item.color}}\\\" value=\\\"{{item.value}}\\\" checked=\\\"{{item.checked}}\\\"\\n              disabled=\\\"{{item.disabled}}\\\">\\n            </ion-radio>\\n          </ion-item>\\n        </ion-radio-group> -->\\n\\n        <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"addEvent()\\\" [disabled]=\\\"event.title == ''\\\">Create\\n        </ion-button>\\n        <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" color=\\\"warning\\\" (click)=\\\"collapseCard = !collapseCard\\\">Cancel\\n        </ion-button>\\n      </ion-card-content>\\n    </div>\\n\\n    <ng-template #elseBlock>\\n      <ion-card-header>\\n        <ion-card-title>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                Edit\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label>Name</ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Event Name\\\" [(ngModel)]=\\\"event.EditName\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Location</ion-label>\\n          <ion-input type=\\\"text\\\" placeholder=\\\"Location\\\" [(ngModel)]=\\\"event.EditLocation\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Description</ion-label>\\n          <ion-textarea type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"event.EditDescription\\\"></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"secondary\\\"><strong>Time of Event</strong></ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Start</ion-label>\\n          <ion-datetime placeholder=\\\"Month/Day/Hour/minute\\\" displayFormat=\\\"MMM/DD/HH:mm\\\" pickerFormat=\\\"MMM/DD/HH:mm\\\"\\n            [(ngModel)]=\\\"event.EditStart\\\">\\n          </ion-datetime>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>End</ion-label>\\n          <ion-datetime placeholder=\\\"Month/Day/Hour/minute\\\" displayFormat=\\\"MMM/DD/HH:mm\\\" pickerFormat=\\\"MMM/DD/HH:mm\\\"\\n            [(ngModel)]=\\\"event.EditEnd\\\">\\n          </ion-datetime>\\n        </ion-item>\\n\\n        <!-- <ion-item>\\n          <ion-label position=\\\"floating\\\" color=\\\"secondary\\\"><strong>Color of Event</strong></ion-label>\\n        </ion-item>\\n        <ion-radio-group name=\\\"radio-group\\\" [(ngModel)]=\\\"event.EditColor\\\">\\n          <ion-item *ngFor=\\\"let item of radio_list\\\">\\n            <ion-text color=\\\"{{item.color}}\\\">{{item.text}}</ion-text>\\n            <ion-radio slot=\\\"end\\\" color=\\\"{{item.color}}\\\" value=\\\"{{item.value}}\\\" checked=\\\"{{item.checked}}\\\"\\n              disabled=\\\"{{item.disabled}}\\\">\\n            </ion-radio>\\n          </ion-item>\\n        </ion-radio-group> -->\\n        \\n      </ion-list>\\n\\n      <ion-card-content>\\n        <ion-col>\\n          <ion-button fill=\\\"outline\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"event.isEdit = false\\\">\\n            Back\\n          </ion-button>\\n        </ion-col>\\n        <ion-col>\\n          <ion-button fill=\\\"outline\\\" color=\\\"success\\\" size=\\\"small\\\" (click)=\\\"EditPersonalEvent(event)\\\">\\n            Update\\n          </ion-button>\\n        </ion-col>\\n      </ion-card-content>\\n    </ng-template>\\n\\n  </ion-card>\\n\\n  <ion-row>\\n    <ion-col size=\\\"4\\\">\\n      <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" size=\\\"small\\\"\\n        [color]=\\\"calendar.mode == 'month' ? 'primary' : 'secondary'\\\" (click)=\\\"changeMode('month')\\\">Month</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\">\\n      <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" size=\\\"small\\\" [color]=\\\"calendar.mode == 'week' ? 'primary' : 'secondary'\\\"\\n        (click)=\\\"changeMode('week')\\\">Week</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"4\\\">\\n      <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" size=\\\"small\\\" [color]=\\\"calendar.mode == 'day' ? 'primary' : 'secondary'\\\"\\n        (click)=\\\"changeMode('day')\\\">\\n        Day</ion-button>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-row>\\n    <ion-col size=\\\"2\\\" text-left>\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"back()\\\">\\n        <ion-icon name=\\\"arrow-back\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n\\n    <ion-col text-align>\\n      {{viewTitle}}\\n    </ion-col>\\n\\n    <ion-col size=\\\"2\\\" text-right>\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"next()\\\">\\n        <ion-icon name=\\\"arrow-forward\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n\\n  <calendar [eventSource]=\\\"eventSource\\\" [calendarMode]=\\\"calendar.mode\\\" [currentDate]=\\\"calendar.currentDate\\\"\\n    (onEventSelected)=\\\"onEventSelected($event)\\\" (onTitleChanged)=\\\"onViewTitleChanged($event)\\\" startHour=\\\"1\\\" endHour=\\\"25\\\"\\n    step=\\\"30\\\" startingDayWeek=\\\"1\\\">\\n  </calendar>\\n\\n</ion-content>\"","module.exports = \".red {\\n  background-color: white;\\n  color: red;\\n  border: 2px solid #835301;\\n  border-radius: 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcHBsZS9EZXNrdG9wL1Nlbmlvci1Qcm9qZWN0L3NyYy9hcHAvc3R1ZGVudC92aWV3LWNhbGVuZGFyL3ZpZXctY2FsZW5kYXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQXVCO0VBQ3ZCLFVBQVU7RUFDVix5QkFBeUI7RUFDekIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zdHVkZW50L3ZpZXctY2FsZW5kYXIvdmlldy1jYWxlbmRhci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogcmVkO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICM4MzUzMDE7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB9Il19 */\"","import { Component, ViewChild, OnInit, Inject, LOCALE_ID } from '@angular/core';\nimport { CalendarComponent } from 'ionic2-calendar/calendar'\nimport { AlertController, NavController } from '@ionic/angular';\nimport { formatDate } from '@angular/common';\nimport * as firebase from 'firebase';\nimport { UserService } from 'src/app/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-calendar',\n  templateUrl: './view-calendar.page.html',\n  styleUrls: ['./view-calendar.page.scss'],\n})\nexport class ViewCalendarPage implements OnInit {\n  selectedDate = new Date().toISOString();\n  userId: string;\n  events: any;\n  eventSource = [];\n  viewTitle = '';\n\n  event = {\n    name: '',\n    location: '',\n    description: '',\n    startTime: '',\n    endTime: '',\n    color: '',\n    isEdit: false,\n  };\n\n\n  radio_list = [\n    {\n      id: '1',\n      name: 'radio_list',\n      value: 'black',\n      text: 'Black',\n      color: 'dark',\n      disabled: false,\n      checked: false,\n    }, {\n      id: '2',\n      name: 'radio_list',\n      value: 'green',\n      text: 'Green',\n      color: 'success',\n      disabled: false,\n      checked: true,\n    }, {\n      id: '3',\n      name: 'radio_list',\n      value: 'yellow',\n      text: 'Yellow',\n      color: 'warning',\n      disabled: false,\n      checked: true,\n    }, {\n      id: '4',\n      name: 'radio_list',\n      value: 'purple',\n      text: 'Purple',\n      color: 'tertiary',\n      disabled: false,\n      checked: true,\n    }, {\n      id: '5',\n      name: 'radio_list',\n      value: 'red',\n      text: 'Red',\n      color: 'danger',\n      disabled: false,\n      checked: true,\n    },\n  ];\n\n\n\n  calendar = {\n    mode: 'month',\n    currentDate: new Date()\n  }\n\n  @ViewChild(CalendarComponent) myCal: CalendarComponent;\n  // userId: string;\n\n  constructor(private alertCtrl: AlertController,\n    @Inject(LOCALE_ID)\n    private locale: string,\n    public navCtrl: NavController,\n    public user: UserService,\n    private alertController: AlertController,\n    private router: Router\n\n  ) {\n    this.userId = firebase.auth().currentUser.uid;\n  }\n\n  ngOnInit() {\n    this.user.read_Personal().subscribe(data => {\n      this.eventSource = data.map(e => {\n        console.log(e.payload.doc.data()['UID'])\n        console.log(e.payload.doc.data()['UID'])\n          return {\n            isCurrentUser: false,\n            id: e.payload.doc.id,\n            title: e.payload.doc.data()['Name'],\n            isEdit: false,\n            Name: e.payload.doc.data()['Name'],\n            Desc: e.payload.doc.data()['Description'],\n            Localtion: e.payload.doc.data()['Location'],\n            startTime: e.payload.doc.data()['StartTime'].toDate(),\n            endTime: e.payload.doc.data()['EndTime'].toDate(),\n            Color: e.payload.doc.data()['Color'],\n          };\n        \n      })\n      console.log(\"read event successfully!\");\n\n      // console.log(this.events[0].StartTime.getTime());\n      // this.event =this.events;\n      // console.log(this.event)\n      // this.eventSource.push(event);\n      // this.myCal.loadEvents();\n    });\n\n  }\n\n  resetEvent() {\n    this.event = {\n      name: '',\n      location: '',\n      description: '',\n      startTime: new Date().toISOString(),\n      endTime: new Date().toISOString(),\n      color: '',\n      isEdit: false,\n    };\n  }\n\n  addEvent() {\n    if (this.event.name == \"\") {\n      this.showAlert(\"Name empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Name empty!\");\n      console.log(\"show name empty alert\")\n\n    } else if (this.event.description == \"\") {\n      this.showAlert(\"Description empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Description empty!\");\n      console.log(\"show description empty alert\")\n\n    } else {\n      let eventCopy = {\n        name: this.event.name,\n        location: this.event.location,\n        startTime: new Date(this.event.startTime),\n        endTime: new Date(this.event.endTime),\n        desc: this.event.description,\n        color: this.event.color\n      }\n\n      this.userId = firebase.auth().currentUser.uid\n      let record = {};\n      record['Name'] = eventCopy.name;\n      record['Description'] = eventCopy.desc;\n      record['Location'] = eventCopy.location;\n      record['StartTime'] = eventCopy.startTime;\n      record['EndTime'] = eventCopy.endTime;\n      record['Color'] = eventCopy.color;\n      record['UID'] = this.userId;\n\n      this.user.create_PersonalEvent(record).then(resp => {\n        this.event.name = \"\";\n        this.event.description = \"\";\n        this.event.location = \"\";\n        this.event.startTime = \"\";\n        this.event.endTime = \"\";\n        this.event.color = \"\";\n        this.userId = \"\";\n        this.showAlert(\"Successfully\", \"Create Success!\");\n        this.router.navigateByUrl('student-tabs/view-calendar');\n        console.log(\"Create Successfully!\")\n        console.log(\"show create successfully alert\")\n      })\n        .catch(error => {\n          console.log(error);\n        });\n\n      this.eventSource.push(eventCopy);\n      this.myCal.loadEvents();\n      console.log(this.eventSource[0].endTime);\n\n      // if (eventCopy.allDay) {\n      //   let start = eventCopy.startTime;\n      //   let end = eventCopy.endTime;\n\n      //   eventCopy.startTime = new Date(Date.UTC(start.getUTCFullYear(), start.getUTCMonth(), start.getUTCDate()));\n      //   eventCopy.endTime = new Date(Date.UTC(end.getUTCFullYear(), end.getUTCMonth(), end.getUTCDate() + 1));\n      // }\n\n\n    }\n  }\n\n  EditPersonalEvent(recordRow) {\n    if (recordRow.EditName == \"\") {\n      this.showAlert(\"Name empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Name empty!\");\n      console.log(\"show name empty alert\")\n\n    } else if (recordRow.EditDescription == \"\") {\n      this.showAlert(\"Description empty!\", \"Please continue enter with the missing information!\");\n      console.log(\"Description empty!\");\n      console.log(\"show description empty alert\")\n    } else {\n      let record = {};\n      record['Name'] = recordRow.EditName;\n      record['Description'] = recordRow.EditDescription;\n      record['Location'] = recordRow.EditLocation;\n      record['StartTime'] = new Date(recordRow.EditStart);\n      record['EndTime'] = new Date(recordRow.EditEnd);\n      record['Color'] = recordRow.EditColor;\n      this.user.update_PersonalEvent(recordRow.id, record);\n      recordRow.isEdit = false;\n      this.showAlert(\"Successfully!\", \"Update Successfully!\");\n      console.log(\"Update Successfully!\")\n      console.log(\"show create successfully alert\")\n    }\n  }\n\n  EditRecord(record) {\n    record.isEdit = true;\n    record.EditName = record.Name;\n    record.EditDescription = record.Desc;\n    record.EditLocation = record.Localtion;\n    record.EditStart = record.StartTime;\n    record.EditEnd = record.EndTime;\n    record.EditColor = record.Color;\n\n  }\n\n  DeletePersonalEvent(recordRow) {\n    console.log('show confirmation alert');\n    console.log(recordRow.id);\n\n    this.presentAlertConfirm('Are you sure you want to delete this event?').then(confirm => {\n\n      if (confirm) {\n        this.user.delete_PersonalEvent(recordRow.id);\n        this.showAlert(\"Successfully!\", \"Delete Success!\");\n        console.log('show delete success alert');\n        console.log('Deleted');\n      } else {\n        this.router.navigateByUrl('student-tabs/view-calendar');\n        console.log('Canceled!');\n        console.log('show canceled alert');\n      }\n    })\n  }\n\n  changeMode(mode) {\n    this.calendar.mode = mode;\n  }\n\n  back() {\n    var swiper = document.querySelector('.swiper-container')['swiper'];\n    swiper.slidePrev();\n  }\n\n  next() {\n    var swiper = document.querySelector('.swiper-container')['swiper'];\n    swiper.slideNext();\n  }\n\n  // today() {\n  //   this.calendar.currentDate = new Date();\n  // }\n\n  async onEventSelected(event) {\n    let start = formatDate(event.startTime, 'medium', this.locale);\n    let end = formatDate(event.endTime, 'medium', this.locale);\n    let resolveFunction: (confirm: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveFunction = resolve;\n    });\n\n    const alert = await this.alertCtrl.create({\n      header: event.title,\n      subHeader: this.event.description,\n      message: 'From: ' + start + '<br><br>To: ' + end,\n      buttons: [\n        {\n          text: 'Update',\n\n          handler: () => this.EditRecord(event)\n\n        }, {\n          text: 'Remove',\n          handler: () => this.DeletePersonalEvent(event)\n        }\n      ]\n    });\n    alert.present();\n    this.event = event\n    return promise;\n\n  }\n\n  onViewTitleChanged(title) {\n    this.viewTitle = title;\n  }\n\n  async showAlert(title: string, content: string) {\n    const alert = await this.alertController.create({\n      header: title,\n      message: content,\n      buttons: ['OK']\n    })\n    await alert.present()\n  }\n\n  async presentAlertConfirm(content: string) {\n    let resolveFunction: (confirm: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveFunction = resolve;\n    });\n    const alert = await this.alertController.create({\n      header: 'Confirmation!',\n      message: content,\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: () => resolveFunction(false)\n        }, {\n          text: 'Confirm',\n          handler: () => resolveFunction(true)\n        }\n      ]\n    });\n\n    await alert.present();\n    return promise;\n  }\n  // onTimeSelected(ev) {\n  //   let selected = new Date(ev.selectedTime);\n  //   this.event.startTime = selected.toISOString();\n  //   selected.setHours(selected.getHours() + 1);\n  //   this.event.endTime = (selected.toISOString());\n  // }\n}\n"],"sourceRoot":""}